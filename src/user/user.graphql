scalar DateTime
scalar Date
#type

type UserDto {
    id: String
    nick: String
    phone: String
    role: String
    email: String
    password: String
    urlImage: String
    request_token: String
    reset_password_token: String
    reset_password_expires: String
    deleted: String
    createdAt: DateTime
    updatedAt: DateTime
}
type UserEntity {
    id: String
    nick: String
    phone: String
    role: String
    email: String
    password: String
    urlImage: String
    request_token: String
    reset_password_token: String
    reset_password_expires: String
    deleted: String
    createdAt: DateTime
    updatedAt: DateTime
}
#response
type CreateUserResponseDto{
  result: Boolean
}
type DeleteUserResponseDto{
  result: Boolean
}
type ActiveUserResponseDto{
  result: Boolean
}
type UserLoginResponseDto{
  user: UserEntity
  result: Boolean
}
#input
input CreateUserInputDto{
    nick: String
    password: String
    email: String
    phone: String
    role: String
    urlImage: String
}
input DeleteUserInputDto{
  idUser: String
}
input ActiveUserInputDto{
  idUser: String
}
input LoginUserInput{
  email: String
  password: String
}
#query
type Query {
  getAllUsers: [UserDto]!
  getAllUsersDeleted: [UserDto]!
}
#mutation
type Mutation{
  loginUser(loginUserInput: LoginUserInput): UserLoginResponseDto
  createUser(createUserInputDto: CreateUserInputDto): CreateUserResponseDto
  deleteUser(deleteUserInputDto: DeleteUserInputDto): DeleteUserResponseDto
  activeUser(activeUserInputDto: ActiveUserInputDto): ActiveUserResponseDto
}